// Subset font created by SubsetFontCreator
// For subset: " !%)-:<?A[]]mm°°"

#ifndef Tahoma_20_1bRt_h
#define Tahoma_20_1bRt_h

#include "XFontGlyph.h"
#include "XFontRH1BitDataStream.h"

namespace Tahoma_20_1bRt
{
	const FontHeader	fontHeader PROGMEM =
	{
		1,		// version, currently version = 1
		1,		// oneBit, 1 = 1 bit per pixel, 0 = 8 bit (antialiased)
		1,		// rotated, glyph data is rotated (applies to 1 bit only)
		1,		// horizontal, addressing for rotated data, else vertical
		0,		// monospaced, fixed width font (for this subset)
		21,		// ascent, font in pixels
		-5,		// descent, font in pixels
		24,		// height, font height (ascent+descent+leading) in pixels
		20,		// width, widest glyph advanceX within subset in pixels
		9,		// numCharcodeRuns
		55		// numCharCodes
	};
	
	const CharcodeRun	charcodeRun[] PROGMEM = // {start, entryIndex}, ...
	{
		{0x0020, 0}, {0x0025, 2}, {0x002D, 7}, {0x003C, 21}, {0x0041, 25},
		{0x005D, 52}, {0x006D, 53}, {0x00B0, 54}, {0xFFFF, 55}
	};
	
	const uint16_t	glyphDataOffset[] PROGMEM =
	{
		0x0000, 0x0005, 0x000E, 0x0035, 0x0053, 0x005A, 0x006E, 0x0082,
		0x0089, 0x008F, 0x00A5, 0x00BB, 0x00CF, 0x00E5, 0x00FB, 0x0113,
		0x0129, 0x013F, 0x0155, 0x016B, 0x0181, 0x0189, 0x019C, 0x01AA,
		0x01BF, 0x01D3, 0x01EF, 0x0207, 0x0221, 0x023D, 0x0253, 0x0269,
		0x0285, 0x029F, 0x02B0, 0x02C3, 0x02DD, 0x02F3, 0x030F, 0x0327,
		0x0345, 0x035D, 0x0381, 0x039B, 0x03B3, 0x03CF, 0x03E9, 0x0403,
		0x0428, 0x0442, 0x045E, 0x0474, 0x0486, 0x0498, 0x04B1, 0x04BD
	};
	
	const uint8_t	glyphData[] PROGMEM =
	{
		0x06, 0x00, 0x15, 0x00, 0x00, 0x07, 0x02, 0x06, 0x0F, 0x02, 0xFF, 0xFF,
		0x9F, 0x33, 0x14, 0x01, 0x06, 0x0F, 0x12, 0x78, 0x09, 0x80, 0x07, 0xF0,
		0xF1, 0x03, 0x04, 0x04, 0xF4, 0xF3, 0x01, 0x0C, 0x8E, 0xE3, 0x71, 0x1C,
		0x0E, 0x03, 0x01, 0x01, 0x0E, 0x0C, 0x00, 0x00, 0x90, 0xBF, 0x01, 0x00,
		0x38, 0x0F, 0x42, 0xF8, 0x0E, 0x0D, 0x00, 0x06, 0x0F, 0x0D, 0xE0, 0xBF,
		0x00, 0x00, 0x1E, 0xBF, 0xE1, 0xC0, 0xE0, 0x3D, 0x1F, 0x02, 0xC0, 0xC3,
		0x03, 0x00, 0x9C, 0xC7, 0x31, 0xC6, 0xF8, 0x9D, 0xC7, 0x31, 0x04, 0x04,
		0x01, 0x05, 0x06, 0x02, 0xFF, 0x0F, 0x08, 0x01, 0x05, 0x14, 0x06, 0x00,
		0xBF, 0xE0, 0xFF, 0x1F, 0x04, 0x00, 0x00, 0x1C, 0xFC, 0xE0, 0x81, 0x03,
		0x02, 0xE0, 0x08, 0x01, 0x05, 0x14, 0x06, 0xD9, 0x09, 0x00, 0x00, 0x04,
		0x1C, 0xFC, 0xE3, 0x03, 0x00, 0x82, 0xE3, 0xFD, 0x1C, 0x1C, 0x07, 0x01,
		0x0E, 0x02, 0x06, 0xFF, 0x0F, 0x06, 0x02, 0x12, 0x03, 0x02, 0x3F, 0x08,
		0x00, 0x05, 0x13, 0x07, 0x00, 0xC0, 0x0F, 0x00, 0x00, 0x18, 0xFF, 0xEF,
		0x00, 0x00, 0x98, 0xFF, 0x67, 0x00, 0x00, 0x00, 0x00, 0x0B, 0x01, 0x06,
		0x0F, 0x09, 0xF8, 0xBF, 0xF8, 0xFF, 0x07, 0x00, 0x00, 0x00, 0x04, 0xFC,
		0xFB, 0x8F, 0xC7, 0x31, 0xC6, 0xFC, 0x0D, 0x0B, 0x02, 0x06, 0x0F, 0x08,
		0xC0, 0x03, 0x03, 0x03, 0x03, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x18, 0xE3,
		0xFF, 0x31, 0xC6, 0x0B, 0x01, 0x06, 0x0F, 0x09, 0xFE, 0x2F, 0x04, 0x00,
		0x00, 0x00, 0x02, 0xC7, 0xFD, 0x3C, 0x00, 0x70, 0xBF, 0x33, 0xC6, 0x18,
		0x63, 0x0B, 0x01, 0x06, 0x0F, 0x09, 0xFE, 0xBF, 0x04, 0x00, 0x00, 0xC0,
		0xC0, 0xC0, 0xE4, 0xBD, 0x1F, 0x33, 0x8C, 0x31, 0xC6, 0xFC, 0x1D, 0x0B,
		0x00, 0x06, 0x0F, 0x0A, 0x00, 0xF8, 0x00, 0x0E, 0xCF, 0xED, 0x3C, 0x1C,
		0xFC, 0xFF, 0x0F, 0x0C, 0x0C, 0x00, 0x00, 0x00, 0xFC, 0x0F, 0x00, 0x0B,
		0x01, 0x06, 0x0F, 0x09, 0xFC, 0xFF, 0x03, 0xFC, 0xFC, 0xC0, 0xC0, 0xC0,
		0xC0, 0x81, 0x03, 0x33, 0x8C, 0x31, 0xC6, 0xEC, 0x0D, 0x0B, 0x01, 0x06,
		0x0F, 0x09, 0xA0, 0xFF, 0xE0, 0xFF, 0x4F, 0x64, 0x60, 0x60, 0xE0, 0xC0,
		0x83, 0x8F, 0xC7, 0x30, 0xC6, 0xFC, 0x0D, 0x0B, 0x01, 0x06, 0x0F, 0x09,
		0xFF, 0xFF, 0x03, 0x00, 0x00, 0x00, 0x00, 0xC3, 0xFB, 0x3C, 0x0C, 0x00,
		0xC8, 0xDF, 0x00, 0x00, 0x00, 0x0B, 0x01, 0x06, 0x0F, 0x09, 0xF8, 0xBF,
		0x3C, 0xFE, 0xE7, 0xC0, 0xC0, 0xC0, 0xC4, 0x3D, 0x1F, 0x9E, 0xC7, 0x31,
		0xC6, 0xFC, 0x1D, 0x0B, 0x01, 0x06, 0x0F, 0x09, 0xF8, 0xAF, 0xF8, 0xFC,
		0x85, 0x03, 0x03, 0x03, 0x07, 0xFD, 0xFB, 0x03, 0x8C, 0x31, 0x66, 0xEE,
		0x00, 0x07, 0x02, 0x0A, 0x0B, 0x02, 0xC7, 0xC1, 0x39, 0x0F, 0x02, 0x09,
		0x0B, 0x0A, 0x70, 0x38, 0x16, 0xCB, 0x60, 0x30, 0x0C, 0x86, 0x01, 0x40,
		0xC4, 0xCC, 0x98, 0x31, 0x0F, 0x02, 0x0C, 0x06, 0x0B, 0x33, 0x33, 0x33,
		0x33, 0x33, 0xF3, 0xFF, 0xFF, 0x03, 0x0F, 0x02, 0x09, 0x0B, 0x0B, 0x03,
		0x83, 0xC1, 0xC0, 0x60, 0x60, 0xB1, 0x58, 0x38, 0x9C, 0xCD, 0x6C, 0x26,
		0x22, 0x00, 0x00, 0x09, 0x01, 0x06, 0x0F, 0x08, 0xFE, 0x2F, 0x01, 0x00,
		0xC0, 0xE0, 0x20, 0x31, 0x1F, 0x0F, 0x00, 0xE4, 0x0C, 0x00, 0x00, 0x0C,
		0x00, 0x06, 0x0F, 0x0C, 0x00, 0xBE, 0x00, 0x00, 0x00, 0xE0, 0xFC, 0x9F,
		0x83, 0x83, 0x9F, 0xFC, 0xE0, 0x00, 0x00, 0xF8, 0xBF, 0x10, 0x42, 0x08,
		0xE1, 0x7D, 0x0C, 0x0C, 0x01, 0x06, 0x0F, 0x0A, 0xFF, 0xBF, 0xF2, 0xFF,
		0x0F, 0x03, 0x03, 0x03, 0x83, 0xF3, 0x76, 0x0E, 0xFC, 0x3F, 0xC6, 0x18,
		0x63, 0xF6, 0x0E, 0x0C, 0x00, 0x06, 0x0F, 0x0B, 0xA0, 0xFF, 0x2B, 0xFF,
		0xFF, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xC0, 0x40, 0x38, 0x8F,
		0x61, 0x8C, 0x31, 0x66, 0x0E, 0x0E, 0x01, 0x06, 0x0F, 0x0C, 0xFF, 0xBF,
		0x02, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x07, 0xFE,
		0xFC, 0xFF, 0x63, 0x8C, 0x31, 0x66, 0xEC, 0x0C, 0x00, 0x0B, 0x01, 0x06,
		0x0F, 0x09, 0xFF, 0xFF, 0xFF, 0xFF, 0xC3, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0,
		0xC0, 0xFC, 0x8F, 0x31, 0xC6, 0x18, 0x63, 0x0A, 0x01, 0x06, 0x0F, 0x09,
		0xFF, 0xFF, 0xFF, 0xFF, 0xC3, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xFC,
		0x0F, 0x00, 0x00, 0x00, 0x00, 0x0D, 0x00, 0x06, 0x0F, 0x0C, 0xA0, 0xFF,
		0xAF, 0xFC, 0xFE, 0x07, 0x01, 0x01, 0x00, 0x00, 0x60, 0x60, 0x61, 0xE1,
		0xE3, 0xE1, 0x3C, 0xC6, 0x31, 0xC6, 0x18, 0xBF, 0x07, 0x0E, 0x01, 0x06,
		0x0F, 0x0B, 0x0F, 0x00, 0xFC, 0xFF, 0x3F, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C,
		0x0C, 0xCC, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x1F, 0x07,
		0x00, 0x06, 0x0F, 0x06, 0xFF, 0x0F, 0x00, 0xF0, 0xFF, 0x0F, 0x00, 0x80,
		0xF1, 0xFF, 0x18, 0x03, 0x08, 0x00, 0x06, 0x0F, 0x07, 0xF0, 0x3F, 0x00,
		0x00, 0x00, 0x00, 0xC0, 0xFF, 0x3F, 0xC6, 0x18, 0xF3, 0x77, 0x00, 0x0C,
		0x01, 0x06, 0x0F, 0x0B, 0x0F, 0x80, 0xDF, 0xFF, 0x3F, 0x0C, 0x1E, 0xBF,
		0xF3, 0xE1, 0x40, 0x00, 0x00, 0xC0, 0xFF, 0x00, 0x80, 0x30, 0x1C, 0xC7,
		0x10, 0x0A, 0x01, 0x06, 0x0F, 0x09, 0x0F, 0x00, 0xFC, 0xFF, 0x03, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x8F, 0x31, 0xC6, 0x18, 0x63, 0x0F,
		0x01, 0x06, 0x0F, 0x0C, 0x3F, 0x00, 0xFC, 0xFF, 0xFF, 0x01, 0x0F, 0x7C,
		0xE0, 0xE0, 0x78, 0x0F, 0x01, 0xFF, 0xFF, 0xFF, 0x03, 0x00, 0x42, 0x00,
		0x00, 0xFC, 0x0F, 0x0D, 0x01, 0x06, 0x0F, 0x0A, 0x3F, 0x00, 0xFF, 0xFF,
		0x1F, 0x70, 0xC0, 0x03, 0x0F, 0x0C, 0xF0, 0xFF, 0xFF, 0x3F, 0x00, 0x00,
		0x0C, 0xFF, 0x3F, 0x0E, 0x00, 0x06, 0x0F, 0x0D, 0xA0, 0xFF, 0x2B, 0xF0,
		0xFF, 0x1F, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x1C, 0xFC, 0xF3,
		0x87, 0xF3, 0x18, 0xC6, 0x18, 0x63, 0xF6, 0x4E, 0x00, 0x0B, 0x01, 0x06,
		0x0F, 0x0A, 0xFF, 0xBF, 0xF2, 0xFF, 0x0F, 0x06, 0x06, 0x06, 0x06, 0x16,
		0xF3, 0xF3, 0xF0, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x06,
		0x13, 0x0D, 0xA0, 0xFF, 0x2B, 0xF0, 0xFF, 0x1F, 0x04, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x04, 0x1C, 0xFC, 0xF3, 0x07, 0x1C, 0x3C, 0x30, 0x60, 0x60,
		0x60, 0xE0, 0xE1, 0x33, 0x3F, 0x1E, 0x06, 0x02, 0x78, 0x0C, 0x01, 0x06,
		0x0F, 0x0B, 0xFF, 0xBF, 0xC0, 0xFF, 0x3F, 0x18, 0x18, 0x38, 0x78, 0xEC,
		0xCF, 0x03, 0x00, 0xC0, 0xFF, 0x00, 0x80, 0x30, 0x1E, 0xC7, 0x10, 0x0B,
		0x00, 0x06, 0x0F, 0x0A, 0xF8, 0xFF, 0xF2, 0xF0, 0x91, 0x03, 0x03, 0x03,
		0x06, 0x06, 0x16, 0x0C, 0xE8, 0x18, 0xC6, 0x18, 0x63, 0xF6, 0x0E, 0x0C,
		0x00, 0x06, 0x0F, 0x0C, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00,
		0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x07,
		0x00, 0x00, 0x00, 0x0D, 0x01, 0x06, 0x0F, 0x0B, 0x0F, 0x00, 0xFC, 0xFF,
		0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xFF, 0xFF, 0x78, 0x0C,
		0x63, 0x8C, 0x31, 0x7B, 0x03, 0x0C, 0x00, 0x06, 0x0F, 0x0B, 0x2F, 0x00,
		0x3E, 0xC0, 0xC1, 0x0F, 0x3E, 0x30, 0x00, 0x30, 0xFE, 0xCF, 0x01, 0x00,
		0x00, 0x60, 0x7C, 0xFE, 0x07, 0x00, 0x00, 0x12, 0x00, 0x06, 0x0F, 0x11,
		0x0F, 0xC0, 0x0F, 0xC0, 0x03, 0x3C, 0xFC, 0xC3, 0x03, 0x00, 0xE2, 0x7F,
		0x04, 0x7C, 0xF0, 0x03, 0x02, 0xC0, 0xFF, 0x3F, 0x00, 0x00, 0x00, 0xBE,
		0xFF, 0x03, 0x00, 0x30, 0xBE, 0xFF, 0x01, 0x00, 0x0C, 0x00, 0x06, 0x0F,
		0x0B, 0x2D, 0x00, 0x1E, 0x40, 0xC0, 0xC0, 0x23, 0x3F, 0x1C, 0xFF, 0xE3,
		0x40, 0x00, 0x00, 0xE4, 0xEE, 0x04, 0x10, 0x8E, 0xE3, 0x10, 0x0C, 0x00,
		0x06, 0x0F, 0x0C, 0x3D, 0x00, 0x7C, 0x00, 0x01, 0x03, 0x0F, 0x3C, 0xF0,
		0xF8, 0x3C, 0x0F, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x07, 0x00,
		0x00, 0x00, 0x0B, 0x01, 0x06, 0x0F, 0x09, 0xFF, 0xFF, 0x03, 0x00, 0x00,
		0x82, 0xC3, 0x71, 0x38, 0x0C, 0x04, 0x70, 0xBF, 0x33, 0xC6, 0x18, 0x63,
		0x08, 0x02, 0x05, 0x14, 0x05, 0x7F, 0x92, 0xFF, 0x7F, 0x00, 0x00, 0x80,
		0xFF, 0x7F, 0x00, 0x00, 0x80, 0x0F, 0x08, 0x01, 0x05, 0x14, 0x05, 0x49,
		0x7E, 0x00, 0x00, 0x80, 0xFF, 0x7F, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0x0F,
		0x11, 0x01, 0x0A, 0x0B, 0x0E, 0xFF, 0x6F, 0x0C, 0xC3, 0xF0, 0xF3, 0xC6,
		0x30, 0x0C, 0xBF, 0xFF, 0x3F, 0x00, 0x00, 0xFC, 0x0F, 0x00, 0x00, 0xFF,
		0x03, 0x09, 0x01, 0x06, 0x07, 0x07, 0x58, 0xC9, 0x41, 0x10, 0x42, 0x74,
		0x00
	};
	
	// Usage: Copy the 3 commented lines to your code, removing the comments.
	//#include "XFont.h"
	//XFont xFont;
	//#include "Tahoma_20_1bRt.h"
	
	// Leave the next 3 lines here, as is.
	DataStream_P	dataStream(glyphData, sizeof(glyphData));
	XFontRH1BitDataStream xFontDataStream(&xFont, &dataStream);
	XFont::Font font(&fontHeader, charcodeRun, glyphDataOffset, &xFontDataStream);
	
	// The display needs to be set before using xFont.  This only needs
	// to be done once at the beginning of the program.
	// Use xFont.SetDisplay(&display, &Tahoma_20_1bRt::font); to do this.
	// To change to this font anywhere after setting the display,
	// use: xFont.SetFont(&Tahoma_20_1bRt::font);
}

#endif // Tahoma_20_1bRt_h

